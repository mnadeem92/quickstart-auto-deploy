pipeline {
    agent { node "Master" }
    stages {
        stage('git_checkout_repo') {
	  steps {
             checkout(
            [$class: 'GitSCM',
            branches: [[name: '*/master']],
            doGenerateSubmoduleConfigurations: false,
            extensions: [],
            submoduleCfg: [],
            userRemoteConfigs: [
                [url: 'https://github.com/mnadeem92/quickstart-auto-deploy.git']
                ]
            ]
        )
}
        }
        stage('decrypt_vault_data') {
            steps {
                sh '''
		  ls $WORKSPACE
                  cd $WORKSPACE
                  echo $VAULT_PSW > /tmp/vault_file
                  ansible-vault decrypt --vault-password-file /tmp/vault_file vars/mdkey mdkey.pub
                  rm -rf /tmp/vault_file
                '''
            }
        }
        stage('create inventory'){
            steps {
                sh '''
		  echo $NODE_IP > $WORKSPACE/inventory
		   '''
		   }
            }
	
        stage('setup environment'){
	  steps {
                ansiblePlaybook(
                      credentialsId: 'root',
                      extras: '-e NODE_IP=$NODE_IP -e @vars/config_vars.yml -e @vars/credentials.yaml',
                      installation: 'ansible',
                      inventory: '$WORKSPACE/inventory',
                      playbook: '$WORKSPACE/setup_env.yaml',
                )
	      }
            }
        stage('Deploy OSP16'){
	  steps {
                ansiblePlaybook(
                      credentialsId: 'stack',
                      extras: '-e NODE_IP=$NODE_IP',
                      installation: 'ansible',
                      inventory: '$WORKSPACE/inventory',
                      playbook: '$WORKSPACE/deploy_osp16.yaml',
                )
	      }
            }

        
    }
}
